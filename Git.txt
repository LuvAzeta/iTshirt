# Git 연습을 위한 폴더 생성
0. 바탕화면에 Programming폴더, 그 안에 iTshirt-cat 폴더, 그 안에 README.txt 파일을 만들어 내용을 작성함.

# 프로젝트 초기화(.git 생성) 및 내 정보 등록
1. 관리할 폴더(iTshirt-cat) 선택 후 Git Bash Here -> $git init를 하면 프로젝트가 초기화된다. -> .git 생김
2. 버전 관리를 위해 내 정보 등록 $git config --global user.email "crecer1112@naver.com" -> $git config --global user.name "LuvAzeta"

# 첫 번째 커밋 and 수정 및 재커밋
3. 커밋에 추가할 파일 선택 $git add README.txt
4. 상세 설명 적기 $git commit -m "사이트 설명 추가 -> 첫 번째 커밋"
  -m : message의 약자
5... README.txt 파일 수정 및 재커밋

# git 커밋 로그 확인 및 옛날 커밋으로 가기, 최신 커밋으로 돌아가기
6. 지금까지 만든 커밋 확인 $git log
7. 가져올 커밋(첫 번째)의 앞 7자리를 가져와 되돌림 $git checkout 8f45ca2
8... 이전 커밋 내용으로 돌아옴
9. 최신 커밋으로 다시 가기 (=$git check 8f45ca2) $git checkout -   

# 원격저장소(git)를 만들고 내 로컬저장소에 연결하기 
10. github.com에서 iTshirt라는 이름의 원격 저장소를 만들기
https://github.com/LuvAzeta/iTshirt.git
11. 로컬저장소에 원격저장소 주소를 알려주기 $git remote add origin https://github.com/LuvAzeta/iTshirt.git
12. 로컬의 커밋을 push로 원격저장소에 올리기 $git push origin master -> 로그인
13... 그러면 내 원격저장소에 README.txt가 생김!

# 원격저장소의 내용을 로컬저장소에 내려받기
14... 원격을 로컬에 내려받기 위해 iTshirt-oct 폴더를 만들고 Git Bash Here 클릭 
  -> clone 명령어 뒤에 원격저장소 주소를 입력하면 어느 원격저장소든 내 컴퓨터 로컬저장소에 내려받을 수 있다.
  -> 가져올 저장소(https://github.com/LuvAzeta/iTshirt)에 들어가 Clone or Download 버튼 클릭 -> 주소 복사
  -> Download ZIP으로도 가져올 수 있지만 그러면 원격저장소와 버전 정보가 제외되니 꼭 클론을 통해 받을 것.
  -> 가져온 클론 : https://github.com/LuvAzeta/iTshirt.git
15. 클론을 가져온다(한 칸 띄고 마침표) $git clone https://github.com/LuvAzeta/iTshirt.git .
  - 마침표는 현재 폴더(oct)에 받으라는 뜻이다. 점을 찍지 않으면 oct안에 iTshirt폴더가 생긴다. 
  - 원격저장소 뒤에 한 칸 띄고 마침표를 넣는 것을 꼭 빼먹지 말아야 한다. (새로운 폴더가 하나 더 생기면 복잡하니까)
16... iTshirt-oct 폴더에 파일들이 생긴다. (.git 로컬저장소도 자동으로 생김)

# 가져온 클론의 내용 수정 후 커밋하기
17... README.txt에 개발자 목록(고양이, 문어) 추가
18. 파일을 커밋하고 설명을 붙임 $git add README.txt $git commit -m "개발자 목록 추가"
19. 원격 저장소에 푸시 $git push origin master

# 원격 저장소에 있는 새로운 커밋 로컬 저장소에 가져오기 
20... oct가 수정한 것 cat에 다시 가져오기 cat에서 Git Bash Here -> $git pull origin master
  - pull : 원격저장소에 새로운 커밋이 있으면 그걸 내 로컬저장소에 받아오라는 명령어







$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.